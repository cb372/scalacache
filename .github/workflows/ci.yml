# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8, 2.12.15, 3.1.1]
        java: [temurin@11, temurin@17]
        project: [rootJVM]
        exclude:
          - scala: 2.12.15
            java: temurin@17
          - scala: 3.1.1
            java: temurin@17
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' 'project /' githubWorkflowCheck

      - name: Setup Dependencies
        run: docker-compose up -d

      - name: Check headers and formatting
        if: matrix.java == 'temurin@11'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: Test
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@11'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@11'
        run: sbt 'project ${{ matrix.project }}' '++${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: mkdir -p target .js/target modules/docs/target modules/tests/target modules/caffeine/target modules/unidoc/target .jvm/target .native/target modules/memcached/target modules/circe/target modules/redis/target modules/core/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: tar cf targets.tar target .js/target modules/docs/target modules/tests/target modules/caffeine/target modules/unidoc/target .jvm/target .native/target modules/memcached/target modules/circe/target modules/redis/target modules/core/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}-${{ matrix.project }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (2.13.8, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJVM

      - name: Inflate target directories (2.13.8, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.8, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.13.8-rootJVM

      - name: Inflate target directories (2.13.8, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.15, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-2.12.15-rootJVM

      - name: Inflate target directories (2.12.15, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.1.1, rootJVM)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3.1.1-rootJVM

      - name: Inflate target directories (3.1.1, rootJVM)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        run: echo $PGP_SECRET | base64 -di | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        run: |
          echo "$PGP_SECRET" | base64 -di > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        run: sbt '++${{ matrix.scala }}' tlRelease

  site:
    name: Generate Site
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.8]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup Dependencies
        run: docker-compose up -d

      - name: Generate site
        run: sbt '++${{ matrix.scala }}' docs/tlSite

      - name: Publish site
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: modules/docs/target/docs/site
          keep_files: true
